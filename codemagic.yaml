workflows:
  ios-ci:
    name: iOS CI
    environment:
      flutter: stable
      xcode: latest

    scripts:
      - name: Get Dart packages
        script: flutter pub get

      - name: Install CocoaPods
        script: |
          cd ios
          pod install --no-repo-update
          cd ..

      - name: Decode Base64 Certificate (For iOS Signing)
        script: |
          echo $IOS_CERTIFICATE_BASE64 | base64 --decode > /tmp/akonnct.p12
          security import /tmp/akonnct.p12 -P "$IOS_CERTIFICATE_PASSWORD" -A
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo $IOS_PROVISIONING_PROFILE | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/akonnct.mobileprovision

      - name: Build iOS (Signed)
        script: |
          flutter build ios --release --no-codesign
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -archivePath build/ios/Runner.xcarchive \
            archive

          xcodebuild -exportArchive \
            -archivePath build/ios/Runner.xcarchive \
            -exportOptionsPlist ios/exportOptions.plist \
            -exportPath build/ios/ipa \
            -allowProvisioningUpdates
          
      - name: Upload to TestFlight
        script: |
          echo $TESTFLIGHT_API_KEY_BASE64 | base64 --decode > /tmp/AuthKey.p8
          xcrun altool --upload-app -t ios -f build/ios/ipa/Runner.ipa \
            --apiKey $TESTFLIGHT_API_KEY_ID \
            --apiIssuer $TESTFLIGHT_API_ISSUER_ID \
            --private-key /tmp/AuthKey.p8 \
            --verbose
          
      - name: Zip iOS .app for download
        script: |
          mkdir -p artifacts
          cp -r build/ios/ipa/*.ipa artifacts/Runner.ipa
          cd artifacts
          zip -r Runner.app.zip Runner.ipa

      - name: Build Android AAB
        script: flutter build appbundle --release

    artifacts:
      - artifacts/Runner.app.zip
      - artifacts/Runner.ipa
      - build/app/outputs/bundle/release/*.aab
