# ios/Podfile

platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', 'Debug' => :debug, 'Profile' => :release, 'Release' => :release

def flutter_root
  # load FLUTTER_ROOT from Generated.xcconfig
  xcconfig = File.expand_path('Flutter/Generated.xcconfig', __dir__)
  raise "#{xcconfig} must exist. Run `flutter pub get` first." unless File.exist?(xcconfig)
  File.foreach(xcconfig) do |line|
    return line.match(/^FLUTTER_ROOT\=(.*)$/)[1].strip if line.start_with?('FLUTTER_ROOT')
  end
  raise "FLUTTER_ROOT not set in #{xcconfig}"
end

require File.expand_path(
  File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'),
  __FILE__
)

install! 'cocoapods', :disable_input_output_paths => true

target 'Runner' do
  # static frameworks so Flutter/Flutter.h is always found
  use_frameworks! :linkage => :static

  # all your plugins
  flutter_install_all_ios_pods(__dir__)
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # inject Flutter build settings (search paths, clang flags, etc)
    flutter_additional_ios_build_settings(target)

    target.build_configurations.each do |config|
      # M1-simulator workaround
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      # ensure minimum iOS 13.0
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end
  end
end
